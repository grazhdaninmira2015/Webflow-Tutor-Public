Webflow.push(function() {
  const grid = document.querySelector('.footer_content');
  const squares = document.querySelectorAll('.footer_square');
  let tweens = [];

  if(grid && squares.length > 0) {
    grid.addEventListener("mousemove", (e) => {
      const rect = e.target.getBoundingClientRect();

      const mouseX = e.offsetX;
      const mouseY = e.offsetY;

      squares.forEach(square => {
        const squareRect = square.getBoundingClientRect();

        const squareX = squareRect.left + squareRect.width / 2 - rect.left;
        const squareY = squareRect.top + squareRect.height / 2 - rect.top;

        //const distanceX = Math.abs(squareX - mouseX); //прямокутник
        //const distanceY = Math.abs(squareY - mouseY); //прямокутник
        //const distance = Math.sqrt(Math.pow(squareX - mouseX, 2) + Math.pow(squareY - mouseY, 2)); //коло
        const randomFactorX = (Math.random() - 0.5) * 40;
        const randomFactorY = (Math.random() - 0.5) * 40;

        const distance = Math.abs((squareX + randomFactorX) - mouseX) * 1.1 + Math.abs((squareY + randomFactorY) - mouseY);

        let opacity;
        const dist1 = 10;
        const dist2 = 22.5;
        const fontSize = parseFloat(getComputedStyle(document.documentElement).fontSize);

        if(distance < dist1 * fontSize) {
          opacity = 1;
        }
        else if(distance < dist2 * fontSize) {
          opacity = 0.75;
        }
        else {
          opacity = "";
        }

        const tween = gsap.to(square, {
          opacity: opacity,
          ease: "expo.out",
          duration: Math.random() / 2,
          delay: Math.random() / 3
        });
        tweens.push(tween);
      });
    });

    grid.addEventListener("mouseleave", () => {
      tweens.forEach(tween => {
        tween.kill();
      });
      tweens = [];

      squares.forEach(square => {
        gsap.to(square, {
          opacity: 0.5,
          ease: "expo.out",
          duration: 0.7,
        });
      });
    });
  }
});
